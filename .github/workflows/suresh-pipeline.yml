name: suresh - CICD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - devops-suresh
env:
  WEBAPP_SLN_PATH: './SimpleFrameworkApp.sln'   #Set Path of your Application Sln file
  
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'      # set this to the path to your web app project, defaults to the repository root
  
  #Deployement Configuration
  SLOT_NAME: 'suresh'
  #AZURE_WEBAPP_NAME:    # set this to your application's name
  #AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.DEV_AZURE_WEBAPP_PUBLISH_PROFILE  }}
  #CLIENT_ID: ${{ secrets.CLIENT_ID }}
  #CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  #SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  

jobs:
  unittest:
    name: Unit Test
    runs-on: windows-latest
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2

    - name: Unit Test not ready
      run: echo "Unit Test not ready"

    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1

  analyze:
    name: SAST CodeQL
    runs-on: windows-latest
   #if: ${{ false }}

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    #- name: Quality Gate Check
    #  uses: corp-ais/quality-gate-action@main
    #  with:
    #    repository: corp-ais/DotnetInternalSampleLib
    #    severity: critical
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  build-publish-deploy1:
    name: Build-Publish-Deploy1
    runs-on: windows-latest
    needs: [analyze,unittest]
    if: ${{ true }}
    steps:
    - uses: actions/checkout@v2
    
    - name: Seting up MSBuild Path
      uses: microsoft/setup-msbuild@v1.1
      
      working-directory: '.nuget\Nuget.Config'    
    - name: Replace PKG Credentials
      run: |
            powershell
            <(Get-Content -Path '.nuget\Nuget.Config' -Raw).Replace('{user}','${{secrets.NU_PKG_USER}}').Replace('{token}','${{secrets.NU_PKG_TOKEN}}') | Set-Content -FilePath '.nuget\Nuget.config'>
            exit 
            
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Restore NuGet packages
      run: nuget restore ${{ env.WEBAPP_SLN_PATH }}

    - name: Build
      run: msbuild ${{ env.WEBAPP_SLN_PATH }} /p:Configuration=Release

    - name: Publish
      run: msbuild ${{ env.WEBAPP_SLN_PATH }} /p:Configuration=Release /p:DeployOnBuild=true /t:WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=${{ env.AZURE_WEBAPP_PACKAGE_PATH }} /p:PackageAsSingleFile=false

    - name: Publish artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: esd-csi1
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
