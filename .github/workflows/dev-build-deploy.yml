name: dev - build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - develop1
      #- feature/**

env:
  #AZURE_WEBAPP_NAME:    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'publish'      # set this to the path to your web app project, defaults to the repository root
  #DOTNET_VERSION: '4.8'          # set this to the dot net version to use
  #AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.DEV_AZURE_WEBAPP_PUBLISH_PROFILE  }}
  #CLIENT_ID: ${{ secrets.CLIENT_ID }}
  #CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  #SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  WEBAPP_SLN_PATH: 'SimpleFrameworkApp.sln'    #Set Path of your Application Sln file.
  SLOT_NAME: 'dev'
  

jobs:
  analyze:
    name: SAST CodeQL
    runs-on: windows-2019
    
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    #- name: Quality Gate Check
    #  uses: corp-ais/quality-gate-action@main
    #  with:
    #    repository: corp-ais/DotnetInternalSampleLib
    #    severity: critical
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  build-and-deploy:
    name: Build and deploy
    runs-on: windows-2019
    needs: [analyze]
    steps:
    - uses: actions/checkout@v2
    
    - name: Seting up MSBuild Path
      uses: microsoft/setup-msbuild@v1.1
      #with:
      #  vs-version: "[16.4,16.9)"
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
    
    - name: Restore NuGet packages
      run: nuget restore ${{ env.WEBAPP_SLN_PATH }}

    - name: Build
      run: msbuild ${{ env.WEBAPP_SLN_PATH }} /p:Configuration=Release

    - name: Publish
      run: msbuild ${{ env.WEBAPP_SLN_PATH }} /p:Configuration=Release /p:DeployOnBuild=true /t:WebPublish /p:WebPublishMethod=FileSystem /p:publishUrl=${{ env.AZURE_WEBAPP_PACKAGE_PATH }} /p:PackageAsSingleFile=false

    - name: Publish artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: iworkflow
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Create deployment
      uses: chrnorm/deployment-action@releases/v1
      id: deployment
      with:
        initial_status: in_progress
        token: ${{ secrets.GIT_PAT }}   
        environment: ${{ env.SLOT_NAME }}
  
    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: ${{ secrets.GIT_PAT }}   
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          
    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: ${{ secrets.GIT_PAT }}   
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
